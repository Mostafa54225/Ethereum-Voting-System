{"version":3,"sources":["Components/Navbar/NavbarUser.js","Components/Navbar/NavbarAdmin.js","Components/ElectionStatus.js","Components/Home/StartEnd.js","Components/Home/RenderAdmin.js","getWeb3.js","Components/Home/UserHome.js","Components/Home/Home.js","Components/Admin/AdminOnly.js","Components/Admin/AddCandidate/LoadCandidates.js","Components/Admin/AddCandidate/AddCandidate.js","Components/NotInit.js","Components/Voting/Voting.js","Components/Result/Result.js","Components/Admin/AddAdmin/LoadAdmins.js","Components/Admin/AddAdmin/AddAdmin.js","Components/Registration/Registration.js","Components/Admin/Verification/Verification.js","Components/NotFound.js","App.js","index.js"],"names":["NavbarUser","hamburger","document","querySelector","navMenu","closeMenu","classList","remove","querySelectorAll","forEach","n","addEventListener","className","href","onClick","toggle","masterAdmin","ElectionStatus","props","style","borderTop","marginTop","padding","margin","width","border","marginLeft","marginRight","textAlign","borderRadius","overflow","alignItems","justifyContent","display","Started","Ended","StartEnd","start","end","endElection","btn","minWidth","alignSelf","type","title","to","color","textDecoration","RenderAdmin","registerElection","EMsg","msg","useForm","handleSubmit","register","errors","formState","onSubmit","data","adminName","placeholder","required","electionTitle","getWeb3","Promise","resolve","reject","window","a","ethereum","web3","Web3","enable","console","log","provider","providers","HttpProvider","UserHome","electionDetails","elDetails","Home","useState","currentAccount","setCurrentAccount","ElectionSC","setElectionSC","isAdmin","setIsAdmin","setStart","setEnd","setAdminName","setElectionTitle","setWeb3","setElectionDetails","setAdmins","isSubAdmin","setIsSubAdmin","useEffect","loadContract","eth","getAccounts","account","net","getId","networkId","deployedNetwork","Electionabi","networks","election","Contract","abi","address","methods","getAdmin","call","admin","getStart","getEnd","getAdminName","getElectionTitle","getTotalAdmin","adminCount","admins","i","push","adminAddress","getTransactionCount","send","from","location","reload","NavbarAdmin","AdminOnly","borderColor","page","LoadCandidates","candidates","map","candidate","key","candidateId","name","AddCandidate","candidateName","setCandidateName","candidateCount","setCandidateCount","setCandidates","setAdminCount","loadContracts","getTotalCandidate","addCandidate","on","value","onChange","e","target","disabled","length","NotInit","Voting","componentDidMount","hash","accounts","instance","setState","ElectionInstance","state","voted","isElStarted","isElEnded","id","voteCount","voterDetails","voter","currentVoter","voterAddress","phone","isVerified","isVerfied","isRegistered","masterAmdin","status","staus","options","filter","fromBlock","toBlock","getPastEvents","then","result","eventVoters","returnValues","_candidateId","_voterAddress","alert","error","renderCandidates","castVote","vote","confirm","LoopEvent","event","undefined","this","fontSize","Component","Result","displayResults","displayWinner","winnerCandidate","maxVoteRecived","getWinner","winner","setAdminAddress","addAdmin","LoadAdmins","Registration","getTotalVoters","voterCount","voters","updateVoterName","voterName","updateVoterPhone","voterPhone","registerAsVoter","updateVoter","loadAllVoters","hasVoted","Verification","renderUnverifiedVoters","verifyVoter","verifiedStatus","NotFound","App","exact","path","component","AddAdmin","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.8d189ced.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nimport './Navbar.css'\r\n\r\n  \r\n\r\nconst NavbarUser = () => {\r\n\r\n  const hamburger = document.querySelector(\".hamburger\");\r\n  const navMenu = document.querySelector(\".nav-menu\");\r\n  const navLink = document.querySelectorAll(\".nav-link\");\r\n\r\n  function mobileMenu() {\r\n    hamburger.classList.toggle(\"active\");\r\n    navMenu.classList.toggle(\"active\");\r\n  }\r\n\r\n  navLink.forEach(n => n.addEventListener(\"click\", closeMenu));\r\n\r\n  function closeMenu() {\r\n    hamburger.classList.remove(\"active\");\r\n    navMenu.classList.remove(\"active\");\r\n  }\r\n\r\n  return (\r\n    <header className=\"header\">\r\n        <nav className=\"navbar\">\r\n            <a href=\"/\" className=\"nav-logo\">Home.</a>\r\n            <ul className=\"nav-menu\">\r\n                <li className=\"nav-item\">\r\n                    <a href=\"/Registration\" className=\"nav-link\">Registration</a>\r\n                </li>\r\n                <li className=\"nav-item\">\r\n                    <a href=\"/Voting\" className=\"nav-link\">Voting</a>\r\n                </li>\r\n                <li className=\"nav-item\">\r\n                    <a href=\"/Result\" className=\"nav-link\">Result</a>\r\n                </li>\r\n            </ul>\r\n            <div className=\"hamburger\" onClick={mobileMenu}>\r\n                <span className=\"bar\"></span>\r\n                <span className=\"bar\"></span>\r\n                <span className=\"bar\"></span>\r\n            </div>\r\n        </nav>\r\n</header>\r\n  )\r\n}\r\n\r\nexport default NavbarUser","import React from 'react'\r\n// import { NavLink } from 'react-router-dom'\r\n\r\nimport './Navbar.css'\r\n\r\n  \r\n\r\nconst NavbarUser = (masterAdmin) => {\r\n\r\n  const hamburger = document.querySelector(\".hamburger\");\r\n  const navMenu = document.querySelector(\".nav-menu\");\r\n  const navLink = document.querySelectorAll(\".nav-link\");\r\n\r\n  function mobileMenu() {\r\n    hamburger.classList.toggle(\"active\");\r\n    navMenu.classList.toggle(\"active\");\r\n  }\r\n\r\n  navLink.forEach(n => n.addEventListener(\"click\", closeMenu));\r\n\r\n  function closeMenu() {\r\n    hamburger.classList.remove(\"active\");\r\n    navMenu.classList.remove(\"active\");\r\n  }\r\n\r\n  return (\r\n    <header className=\"header\">\r\n        <nav className=\"navbar\">\r\n            <a href=\"/\" className=\"nav-logo\">Admin.</a>\r\n            <ul className=\"nav-menu\">\r\n              {masterAdmin ? \r\n                <li className=\"nav-item\">\r\n                  <a href=\"/AddAdmin\" className=\"nav-link\">Add Admin</a>\r\n                </li>: null\r\n              }\r\n              <li className=\"nav-item\">\r\n                  <a href=\"/Verification\" className=\"nav-link\">Verfication</a>\r\n              </li>\r\n              <li className=\"nav-item\">\r\n                  <a href=\"/AddCandidate\" className=\"nav-link\">Add Candidate</a>\r\n              </li>\r\n              <li className=\"nav-item\">\r\n                  <a href=\"/Voting\" className=\"nav-link\">Voting</a>\r\n              </li>\r\n              <li className=\"nav-item\">\r\n                  <a href=\"/Result\" className=\"nav-link\">Result</a>\r\n              </li>\r\n            </ul>\r\n            <div className=\"hamburger\" onClick={mobileMenu}>\r\n              <span className=\"bar\"></span>\r\n              <span className=\"bar\"></span>\r\n              <span className=\"bar\"></span>\r\n            </div>\r\n        </nav>\r\n  </header>\r\n  )\r\n}\r\n\r\n\r\nexport default NavbarUser","import React from 'react'\r\n\r\nconst ElectionStatus = (props) => {\r\n  const electionStatus = {\r\n    padding: \"11px\",\r\n    margin: \"7px\",\r\n    width: \"100%\",\r\n    border: \"1px solid tomato\",\r\n    marginLeft: \"auto\",\r\n    marginRight: \"auto\",\r\n    textAlign: \"center\",\r\n    borderRadius: \"0.5em\",\r\n    overflow: \"auto\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"space-around\",\r\n    display: \"flex\",\r\n  };\r\n  return (\r\n    <div\r\n      className=\"container-main\"\r\n      style={{ borderTop: \"1px solid\", marginTop: \"0px\" }}\r\n    >\r\n      <h3>Election Status</h3>\r\n      <div style={electionStatus}>\r\n        <p>Started: {props.Started ? \"True\" : \"False\"}</p>\r\n        <p>Ended: {props.Ended ? \"True\" : \"False\"}</p>\r\n      </div>\r\n      <div className=\"container-item\" />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ElectionStatus","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst StartEnd = ({start, end, endElection}) => {\r\n  const btn = {\r\n    display: \"block\",\r\n    padding: \"21px\",\r\n    margin: \"7px\",\r\n    minWidth: \"max-content\",\r\n    textAlign: \"center\",\r\n    width: \"333px\",\r\n    alignSelf: \"center\",\r\n  };\r\n  return (\r\n    <div\r\n      className=\"container-main\"\r\n      style={{ borderTop: \"1px solid\", marginTop: \"0px\" }}\r\n    >\r\n      {!start ? (\r\n        <>\r\n          {/* edit here to display start election Again button */}\r\n          {!end ? (\r\n            <>\r\n              <div\r\n                className=\"container-item attention \"\r\n                style={{ display: \"block\" }}\r\n              >\r\n                <h2>Do not forget to add candidates.</h2>\r\n                <p>\r\n                  Go to{\" \"}\r\n                  <Link\r\n                    title=\"Add a new \"\r\n                    to=\"/AddCandidate\"\r\n                    style={{\r\n                      color: \"black\",\r\n                      textDecoration: \"underline\",\r\n                    }}\r\n                  >\r\n                    add candidates\r\n                  </Link>{\" \"}\r\n                  page.\r\n                </p>\r\n              </div>\r\n              <div className=\"container-item\">\r\n                <button type=\"submit\" style={btn}>\r\n                  Start Election {end ? \"Again\" : null}\r\n                </button>\r\n              </div>\r\n            </>\r\n          ) : (\r\n            <div className=\"container-item\">\r\n              <center>\r\n                <p>Re-deploy the contract to start election again.</p>\r\n              </center>\r\n            </div>\r\n          )}\r\n          {end ? (\r\n            <div className=\"container-item\">\r\n              <center>\r\n                <p>The election ended.</p>\r\n              </center>\r\n            </div>\r\n          ) : null}\r\n        </>\r\n      ) : (\r\n        <>\r\n          <div className=\"container-item\">\r\n            <center>\r\n              <p>The election started.</p>\r\n            </center>\r\n          </div>\r\n          <div className=\"container-item\" style={{margin: 'auto', width: '400px'}}>\r\n            <button\r\n              type=\"button\"\r\n              onClick={endElection}\r\n              style={btn}>\r\n              End\r\n            </button>\r\n          </div>\r\n        </>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default StartEnd;","import React from 'react'\r\nimport { useForm } from \"react-hook-form\";\r\nimport ElectionStatus from '../ElectionStatus'\r\n\r\nimport './Home.css'\r\nimport StartEnd from './StartEnd';\r\n\r\nconst RenderAdmin = ({ registerElection, start, end, endElection }) => {\r\n  const EMsg = (props) => {\r\n    return <span style={{ color: \"tomato\" }}>{props.msg}</span>;\r\n  };\r\n  const {\r\n    handleSubmit,\r\n    register,\r\n    formState: {errors}\r\n  } = useForm()\r\n  \r\n  const onSubmit = (data) => {\r\n    registerElection(data)\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <form onSubmit={handleSubmit(onSubmit)}>\r\n        {!start & !end ? (\r\n          <div className=\"container-main d-flex align-items-center justify-content-center\">\r\n            {/* about-admin */}\r\n            <div className=\"about-admin\">\r\n              <h3>About Admin</h3>\r\n              <div className=\"container-item center-items\">\r\n                <div>\r\n                  <label className=\"label-home\">\r\n                    Full Name{\" \"}\r\n                    {errors.adminName && <EMsg msg=\"*required\" />}\r\n                    <input\r\n                      className=\"input-home\"\r\n                      type=\"text\"\r\n                      placeholder=\"First Name\"\r\n                      {...register(\"adminName\", {\r\n                        required: true,\r\n                      })}\r\n                    />\r\n                  </label>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            {/* about-election */}\r\n            <div className=\"about-election\">\r\n              <h3>About Election</h3>\r\n              <div className=\"container-item center-items\">\r\n                <div>\r\n                  <label className=\"label-home\">\r\n                    Election Title{\" \"}\r\n                    {errors.electionTitle && <EMsg msg=\"*required\" />}\r\n                    <input\r\n                      className=\"input-home\"\r\n                      type=\"text\"\r\n                      placeholder=\"eg. School Election\"\r\n                      {...register(\"electionTitle\", {\r\n                        required: true,\r\n                      })}\r\n                    />\r\n                  </label>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        ) : null}\r\n        <StartEnd \r\n          start={start}\r\n          end={end}\r\n          endElection={endElection}\r\n        />\r\n        <ElectionStatus\r\n          Started={start}\r\n          Ended={end}\r\n        />\r\n      </form>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default RenderAdmin","  \r\nimport Web3 from \"web3\";\r\n\r\nconst getWeb3 = () =>\r\n  new Promise((resolve, reject) => {\r\n    // Wait for loading completion to avoid race conditions with web3 injection timing.\r\n    window.addEventListener(\"load\", async () => {\r\n      // Modern dapp browsers...\r\n      if (window.ethereum) {\r\n        const web3 = new Web3(window.ethereum);\r\n        try {\r\n          // Request account access if needed\r\n          await window.ethereum.enable();\r\n          // Acccounts now exposed\r\n          resolve(web3);\r\n        } catch (error) {\r\n          reject(error);\r\n        }\r\n      }\r\n      // Legacy dapp browsers...\r\n      else if (window.web3) {\r\n        // Use Mist/MetaMask's provider.\r\n        const web3 = window.web3;\r\n        console.log(\"Injected web3 detected.\");\r\n        resolve(web3);\r\n      }\r\n      // Fallback to localhost; use dev console port by default...\r\n      else {\r\n        const provider = new Web3.providers.HttpProvider(\r\n          \"http://127.0.0.1:8545\"\r\n        );\r\n        const web3 = new Web3(provider);\r\n        console.log(\"No web3 instance injected, using Local web3.\");\r\n        resolve(web3);\r\n      }\r\n    });\r\n  });\r\n\r\nexport default getWeb3;","import React from \"react\";\r\n\r\nconst UserHome = ({electionDetails}) => {\r\n  return (\r\n    <div>\r\n      <div className=\"container-main\">\r\n        <div className=\"container-list title\">\r\n          <h1 className=\"text-center\" style={{marginTop: '1em'}}>{electionDetails.electionTitle}</h1>\r\n          <br />\r\n          <table style={{ marginTop: \"21px\" }}>\r\n            <tr>\r\n              <th>admin</th>\r\n              <td>\r\n                {electionDetails.elDetails}\r\n              </td>\r\n            </tr>\r\n          </table>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default UserHome;","import React, { useState, useEffect } from 'react'\r\n\r\nimport NavbarUser from '../Navbar/NavbarUser'\r\nimport NavbarAdmin from '../Navbar/NavbarAdmin'\r\n\r\nimport RenderAdmin from './RenderAdmin'\r\nimport getWeb3 from '../../getWeb3'\r\nimport Electionabi from '../../contracts/Election.json'\r\nimport UserHome from './UserHome'\r\nimport { Link } from \"react-router-dom\";\r\n\r\n\r\nimport './Home.css'\r\n\r\nconst Home = () => {\r\n  const[currentAccount, setCurrentAccount] = useState(\"\")\r\n  const[ElectionSC, setElectionSC] = useState()\r\n  const[isAdmin, setIsAdmin] = useState(false)\r\n  const[start, setStart] = useState(false)\r\n  const[end, setEnd] = useState(false)\r\n  const[adminName, setAdminName] = useState(\"\")\r\n  const[electionTitle, setElectionTitle] = useState(\"\")\r\n  const[web3, setWeb3] = useState()\r\n  const[electionDetails, setElectionDetails] = useState({})\r\n  const[admins, setAdmins] = useState([])\r\n  const[isSubAdmin, setIsSubAdmin] = useState(false)\r\n\r\n  useEffect(() => {\r\n    \r\n    loadContract()\r\n  })\r\n\r\n  const loadContract = async () => {\r\n    const web3 = await getWeb3()\r\n    setWeb3(web3)\r\n    const account = await web3.eth.getAccounts()\r\n    const networkId = await web3.eth.net.getId()\r\n    const deployedNetwork = Electionabi.networks[networkId]\r\n    if(deployedNetwork) {\r\n      const election = new web3.eth.Contract(Electionabi.abi, deployedNetwork.address)\r\n      setElectionSC(election)\r\n      setCurrentAccount(account[0])\r\n      console.log(currentAccount)\r\n      const admin = await election.methods.getAdmin().call()\r\n      if(account[0] === admin) setIsAdmin(true)\r\n        \r\n      \r\n      const start = await election.methods.getStart().call()\r\n      setStart(start)\r\n      const end = await election.methods.getEnd().call()\r\n      setEnd(end)\r\n      \r\n      const adminName = await election.methods.getAdminName().call() \r\n      setAdminName(adminName)\r\n      const electionTitle = await election.methods.getElectionTitle().call()\r\n      setElectionTitle(electionTitle)\r\n\r\n      setElectionDetails({elDetails: adminName, electionTitle})\r\n\r\n\r\n      const adminCount = await election.methods.getTotalAdmin().call()\r\n      setAdminName(adminCount)\r\n      let admins = []\r\n      for(let i = 1; i <= adminCount; i++) {\r\n        const admin = await election.methods.admins(i).call()\r\n        admins.push(admin)\r\n      }\r\n      setAdmins(admins)\r\n\r\n      for(let i = 0; i < adminCount; i++) {\r\n        if(account[0] === admins[i].adminAddress) setIsSubAdmin(true)\r\n      }\r\n      \r\n      const getTransactionCount = await web3.eth.getTransactionCount(account[0])\r\n      console.log(getTransactionCount)\r\n      \r\n    }\r\n  }\r\n\r\n  const registerElection = async (data) => {\r\n    await ElectionSC\r\n    .methods\r\n    .setElectionDetails(data.adminName, data.electionTitle)\r\n    .send({from: currentAccount})\r\n    window.location.reload()\r\n  } \r\n\r\n  const endElection = async () => {\r\n    await ElectionSC\r\n    .methods\r\n    .endElection()\r\n    .send({from: currentAccount})\r\n    window.location.reload()\r\n  }\r\n\r\n  \r\n  \r\n  if(!web3) {\r\n    return (\r\n      <>\r\n        <NavbarUser />\r\n        <center>Loading Web3, accounts, and contracts...</center>\r\n      </>\r\n    )\r\n  }\r\n\r\n  return (\r\n    <>\r\n      {isAdmin || isSubAdmin ? <NavbarAdmin /> : <NavbarUser />}\r\n      <div className=\"container-main\">\r\n        <div className=\"container-item center-items info\">\r\n          <center>Your Account {currentAccount}</center>\r\n        </div>\r\n        {!end & !start ? (\r\n          <div className=\"container-item info\">\r\n            <center>\r\n              <h3 className=\"text-center\">The Election has not been initialized</h3>\r\n              {isAdmin || isSubAdmin ? ( <p>Set Up the election</p> ):  ( <p>Please Wait</p> )}\r\n            </center>\r\n          </div>\r\n        ):null}\r\n      </div>\r\n      {isAdmin || isSubAdmin ? <RenderAdmin registerElection={registerElection} start={start} end={end} endElection={endElection}/>\r\n      :start ? (\r\n        <>\r\n          <UserHome electionDetails={electionDetails} />\r\n        </>\r\n      ): !start && end ? (\r\n        <>\r\n          <div className=\"container-item attention\">\r\n            <center>\r\n              <h3 className=\"text-center\">The Election ended.</h3>\r\n              <br />\r\n              <Link\r\n                to=\"/Result\"\r\n                style={{ color: \"black\", textDecoration: \"underline\" }}\r\n              >\r\n                See results\r\n              </Link>\r\n            </center>\r\n          </div>\r\n        </>\r\n      ): null}\r\n    </>\r\n  )\r\n}\r\n\r\n\r\nexport default Home","import React from \"react\";\r\n\r\nconst AdminOnly = (props) => {\r\n  return (\r\n    <div className=\"container-item attention\" style={{ borderColor: \"tomato\" }}>\r\n      <center>\r\n        <div style={{ margin: \"17px\" }}>\r\n          <h1>{props.page}</h1>\r\n        </div>\r\n        <p>Admin access only.</p>\r\n      </center>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AdminOnly;","import React from 'react'\r\n\r\n\r\nconst LoadCandidates = ({candidates}) => {\r\n  return (\r\n    <ul className=\"list-group list-group-flush\">\r\n      { candidates.map((candidate, key) => {\r\n        return(\r\n          <li className=\"list-group-item\" key={key}>\r\n            <label>\r\n              <span>{candidate.candidateId}</span>{\".\"}\r\n              <strong>{candidate.name}</strong>\r\n            </label>\r\n          </li>\r\n        )\r\n      })}\r\n    </ul>\r\n  )\r\n}\r\nexport default LoadCandidates","import React, { useState, useEffect } from 'react'\r\nimport getWeb3 from '../../../getWeb3'\r\nimport NavbarUser from '../../Navbar/NavbarUser'\r\nimport NavbarAdmin from '../../Navbar/NavbarAdmin'\r\nimport AdminOnly from '../AdminOnly'\r\nimport Electionabi from '../../../contracts/Election.json'\r\nimport LoadCandidates from './LoadCandidates'\r\n\r\nimport './AddCandidate.css'\r\n\r\nconst AddCandidate = () => {\r\n\r\n  const[currentAccount, setCurrentAccount] = useState(\"\")\r\n  const[ElectionSC, setElectionSC] = useState()\r\n  const[isAdmin, setIsAdmin] = useState(false)\r\n  const[web3, setWeb3] = useState(null)\r\n  const[candidateName, setCandidateName] = useState(\"\")\r\n  const[candidateCount, setCandidateCount] = useState()\r\n  const[candidates, setCandidates] = useState([])\r\n  const[isSubAdmin, setIsSubAdmin] = useState(false)\r\n  const[adminCount, setAdminCount] = useState()\r\n  const[admins, setAdmins] = useState([])\r\n\r\n  useEffect(() => {\r\n    // if (!window.location.hash) {\r\n    //   window.location = window.location + \"#loaded\";\r\n    //   window.location.reload();\r\n    // }\r\n    loadContracts()\r\n  })\r\n  const loadContracts = async () => {\r\n    const web3 = await getWeb3()\r\n    setWeb3(web3)\r\n    const account = await web3.eth.getAccounts()\r\n    const networkId = await web3.eth.net.getId()\r\n    const deployedNetwork = Electionabi.networks[networkId]\r\n    if(deployedNetwork) {\r\n      const election = new web3.eth.Contract(Electionabi.abi, deployedNetwork.address)\r\n      setElectionSC(election)\r\n      setCurrentAccount(account[0])\r\n      const masterAdmin = await election.methods.getAdmin().call()\r\n      if(account[0] === masterAdmin) setIsAdmin(true)\r\n      const candidateCount = await election.methods.getTotalCandidate().call()\r\n      setCandidateCount(candidateCount)\r\n\r\n      const adminCount = await election.methods.getTotalAdmin().call()\r\n      setAdminCount(adminCount)\r\n\r\n      let admins = []\r\n      for(let i = 1; i <= adminCount; i++) {\r\n        const admin = await election.methods.admins(i).call()\r\n        admins.push(admin)\r\n        if(account[0] === masterAdmin || account[0] === admin.adminAddress) setIsAdmin(true)\r\n      }\r\n      setAdmins(admins)\r\n\r\n      let candidates = []\r\n      for(let i = 1; i <= candidateCount; i++) {\r\n        const candidate = await election.methods.candidates(i).call()\r\n        candidates.push(candidate)\r\n      }\r\n      setCandidates(candidates)      \r\n    }\r\n  }\r\n\r\n  const updateCandidateName = (e) => {\r\n    setCandidateName(e.target.value)\r\n  }\r\n\r\n  const addCandidate = async () => {\r\n    await ElectionSC\r\n    .methods\r\n    .addCandidate(candidateName)\r\n    .send({from: currentAccount})\r\n    .on('transactionhash', () => {console.log(\"Added Successfully\")})\r\n    window.location.reload()\r\n  }\r\n  if(!web3) {\r\n    return (\r\n      <>\r\n        { isAdmin? <NavbarAdmin />: <NavbarUser /> }\r\n        <center>Loading Web3, accounts, and contracts...</center>\r\n      </>\r\n    )\r\n  }\r\n  if(!isAdmin) {\r\n    return(\r\n      <>\r\n        <NavbarUser />\r\n        <AdminOnly page=\"Add Candidates Page\"/>\r\n      </>\r\n    )\r\n  }\r\n  return (\r\n    <div>\r\n      <NavbarAdmin />\r\n      <div className=\"container-main\">\r\n        <h2 className=\"text-center\">Add a new Candidate</h2>\r\n        <center>Total Candidates: {candidateCount}</center>\r\n        <div className=\"container-item\">\r\n          <form className=\"form\">\r\n            <label className={\"label-ac\"}>\r\n              Name\r\n              <input\r\n                className={\"input-ac\"}\r\n                type=\"text\"\r\n                placeholder=\"Candidate Name\"\r\n                value={candidateName}\r\n                onChange={updateCandidateName}\r\n              />\r\n            </label>\r\n            <button\r\n              onClick={addCandidate} className=\"btn-add\"\r\n              disabled={candidateName.length < 3 || candidateName.length > 21}>\r\n              Add\r\n            </button>\r\n          </form>\r\n        </div>\r\n      </div>\r\n      <LoadCandidates candidates={candidates}/>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default AddCandidate","// Node module\r\nimport React from \"react\";\r\n\r\nconst NotInit = () => {\r\n  return (\r\n    <div className=\"container-item info\">\r\n      <center>\r\n        <h3 className=\"text-center\">The election has not been initialize.</h3>\r\n        <p>Please Wait..</p>\r\n      </center>\r\n    </div>\r\n  );\r\n};\r\nexport default NotInit;","// Node modules\r\nimport React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\n// Components\r\nimport NavbarUser from '../Navbar/NavbarUser'\r\nimport NavbarAdmin from '../Navbar/NavbarAdmin'\r\n\r\nimport NotInit from '../NotInit.js'\r\n// Contract\r\nimport getWeb3 from \"../../getWeb3\";\r\nimport Electionabi from '../../contracts/Election.json'\r\n\r\n// CSS\r\nimport \"./Voting.css\";\r\n\r\nexport default class Voting extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      ElectionInstance: undefined,\r\n      account: null,\r\n      web3: null,\r\n      isAdmin: false,\r\n      candidateCount: undefined,\r\n      candidates: [],\r\n      isElStarted: false,\r\n      isElEnded: false,\r\n      currentVoter: {\r\n        address: undefined,\r\n        name: null,\r\n        phone: null,\r\n        voted: false,\r\n        isVerified: 0,\r\n        isRegistered: false\r\n      },\r\n      voted: false,\r\n      adminCount: 0,\r\n      admins: [],\r\n      isSubAdmin: false,\r\n      adminAddress: \"\",\r\n      eventVoters: []\r\n    };\r\n  }\r\n  componentDidMount = async () => {\r\n    // refreshing once\r\n    if (!window.location.hash) {\r\n      window.location = window.location + \"#loaded\";\r\n      window.location.reload();\r\n    }\r\n    try {\r\n      // Get network provider and web3 instance.\r\n      const web3 = await getWeb3();\r\n\r\n      // Use web3 to get the user's accounts.\r\n      const accounts = await web3.eth.getAccounts();\r\n\r\n      // Get the contract instance.\r\n      const networkId = await web3.eth.net.getId();\r\n      const deployedNetwork = Electionabi.networks[networkId];\r\n      const instance = new web3.eth.Contract(Electionabi.abi, deployedNetwork.address)\r\n\r\n      // Set web3, accounts, and contract to the state, and then proceed with an\r\n      // example of interacting with the contract's methods.\r\n      this.setState({\r\n        web3: web3,\r\n        ElectionInstance: instance,\r\n        account: accounts[0],\r\n      });\r\n\r\n      const voted = await this.state.ElectionInstance.methods.voted(this.state.account).call()\r\n      this.setState({voted: voted})\r\n      // Get total number of candidates\r\n      const candidateCount = await this.state.ElectionInstance.methods\r\n        .getTotalCandidate()\r\n        .call();\r\n      this.setState({ candidateCount: candidateCount });\r\n\r\n      // Get start and end values\r\n      const start = await this.state.ElectionInstance.methods.getStart().call();\r\n      this.setState({ isElStarted: start });\r\n      const end = await this.state.ElectionInstance.methods.getEnd().call();\r\n      this.setState({ isElEnded: end });\r\n\r\n      // Loading Candidates details\r\n      for (let i = 1; i <= this.state.candidateCount; i++) {\r\n        const candidate = await this.state.ElectionInstance.methods\r\n          .candidates(i)\r\n          .call();\r\n        this.state.candidates.push({\r\n          id: candidate.candidateId,\r\n          name: candidate.name,\r\n          voteCount: candidate.voteCount\r\n        });\r\n      }\r\n      this.setState({ candidates: this.state.candidates });\r\n\r\n      // Loading current voter\r\n      const voter = await this.state.ElectionInstance.methods\r\n        .voterDetails(this.state.account)\r\n        .call();\r\n      this.setState({\r\n        currentVoter: {\r\n          address: voter.voterAddress,\r\n          name: voter.name,\r\n          phone: voter.phone,\r\n          voted: voted,\r\n          isVerified: voter.isVerfied,\r\n          isRegistered: voter.isRegistered\r\n        },\r\n      });\r\n\r\n      // Admin account and verification\r\n      const masterAmdin = await this.state.ElectionInstance.methods.getAdmin().call();\r\n      \r\n\r\n      const adminCount = await instance.methods.getTotalAdmin().call()\r\n      this.setState({adminCount: adminCount})\r\n      for(let i = 1; i <= this.state.adminCount; i++) {\r\n        const admin = await instance.methods.admins(i).call()\r\n        this.state.admins.push({\r\n          adminAddress: admin.adminAddress,\r\n          name: admin.name,\r\n          status: admin.staus \r\n        })\r\n      }\r\n      if (this.state.account === masterAmdin || this.state.account === this.state.admins.adminAddress) {\r\n        this.setState({ isAdmin: true });\r\n      }\r\n      this.setState({admins: this.state.admins})\r\n      \r\n      for(let i = 0; i < adminCount; i++) \r\n        if(this.state.account === this.state.admins[i].adminAddress) this.setState({isSubAdmin: true})\r\n      \r\n\r\n\r\n      let options = {\r\n          filter: {\r\n              voterAddress: this.state.account\r\n          },\r\n          fromBlock: 375,                  //Number || \"earliest\" || \"pending\" || \"latest\"\r\n          toBlock: 'latest'\r\n      };\r\n      \r\n      this.state.ElectionInstance.getPastEvents('voterIsVoted', options).then((result) => {\r\n        console.log(result)\r\n        for(let i = 0; i < result.length; i++) {\r\n          this.state.eventVoters.push({\r\n            candidateId: result[i].returnValues._candidateId,\r\n            voterAddress: result[i].returnValues._voterAddress\r\n          })\r\n        }\r\n        this.setState({eventVoters: this.state.eventVoters})\r\n      })\r\n      \r\n      \r\n      // this.state.ElectionInstance.events.voterIsVoted({\r\n      //   filter: {myIndexedParam: [20, 23], myOtherIndexedParam: this.state.account},\r\n      //   fromBlock: 0\r\n      // }).on('data', (e) => {\r\n      //   this.state.eventVoters.concat({\r\n      //     candidateId: e.returnValues._candidateId,\r\n      //     voterAddress: e.returnValues._voterAddress\r\n      //   })\r\n        \r\n      // })\r\n      // this.setState({eventVoters: this.state.eventVoters})     \r\n      \r\n      \r\n      // console.log(this.state.eventVoters)\r\n    } catch (error) {\r\n      // Catch any errors for any of the above operations.\r\n      alert(\r\n        `Failed to load web3, accounts, or contract. Check console for details.`\r\n      );\r\n      console.error(error);\r\n    }\r\n  };\r\n\r\n  renderCandidates = (candidate) => {\r\n    \r\n    const castVote = async (id) => {\r\n      await this.state.ElectionInstance.methods\r\n        .vote(id)\r\n        .send({ from: this.state.account });\r\n      window.location.reload();\r\n    };\r\n    const confirmVote = (id, name) => {\r\n      var r = window.confirm(\r\n        \"Vote for \" + name + \" with Id \" + id + \".\\nAre you sure?\"\r\n      );\r\n      if (r === true) {\r\n        castVote(id);\r\n      }\r\n    };\r\n    \r\n    // console.log(this.state.eventVoters)\r\n    return (\r\n      <div className=\"container-item d-flex p-2\" style={{justifyContent: 'space-around'}}>\r\n        <div className=\"candidate-info\">\r\n          <h2>\r\n            <small>#{candidate.id}</small> {candidate.name} <strong className=\"text-success\">{candidate.voteCount}</strong>\r\n          </h2>\r\n          <div>\r\n            \r\n          </div>\r\n        </div>\r\n        <div className=\"vote-btn-container\">\r\n          <button\r\n            onClick={() => confirmVote(candidate.id, candidate.name)}\r\n            className=\"btn btn-primary\"\r\n            disabled=\r\n              {!this.state.currentVoter.isRegistered ||\r\n               (this.state.currentVoter.isVerified == 2 || this.state.currentVoter.isVerified == 0 )||\r\n               this.state.currentVoter.voted ? true: false}>\r\n            Vote\r\n          </button>\r\n        </div>\r\n      </div>\r\n    );\r\n  };\r\n\r\n  LoopEvent = (event, key) => {\r\n    return (\r\n      // <div className=\"d-flex bd-highlight\">\r\n      //   <p className=\"p-2 flex-fill bd-highlight\">{event.candidateId}</p>\r\n      //   <p className=\"p-2 flex-fill bd-highlight\">{event.voterAddress}</p>\r\n      // </div>\r\n      <tr>\r\n        <th>{event.candidateId}</th>\r\n        <th>{event.voterAddress}</th>\r\n      </tr>\r\n    )\r\n  }\r\n\r\n  render() {\r\n    \r\n    if (!this.state.web3) {\r\n      return (\r\n        <>\r\n          {this.state.isAdmin || this.state.isSubAdmin ? <NavbarAdmin /> : <NavbarUser />}\r\n          <center>Loading Web3, accounts, and contract...</center>\r\n        </>\r\n      );\r\n    }\r\n\r\n    return (\r\n      <>\r\n        {this.state.isAdmin || this.state.isSubAdmin ? <NavbarAdmin /> : <NavbarUser />}\r\n        <div>\r\n          {!this.state.isElStarted && !this.state.isElEnded ? (\r\n            <NotInit />\r\n          ) : this.state.isElStarted && !this.state.isElEnded ? (\r\n            <>\r\n              {this.state.currentVoter.isRegistered ? (\r\n                this.state.currentVoter.isVerified == 1 ? (\r\n                  this.state.currentVoter.voted ? (\r\n                    <div className=\"container-item success\">\r\n                      <div>\r\n                        <h3 className=\"text-center\">You've casted your vote.</h3>\r\n                        <center>\r\n                          <Link\r\n                            to=\"/Result\"\r\n                            style={{\r\n                              color: \"black\",\r\n                              textDecoration: \"underline\",\r\n                            }}\r\n                          >\r\n                            See Results\r\n                          </Link>\r\n                        </center>\r\n                      </div>\r\n                    </div>\r\n                  ) : (\r\n                    <div className=\"container-item info\">\r\n                      <h3 className=\"text-center\">Go ahead and cast your vote.</h3>\r\n                    </div>\r\n                  )\r\n                ) : (\r\n                  <div className=\"container-item attention\">\r\n                    <h3 className=\"text-center\">Please wait for admin to verify.</h3>\r\n                  </div>\r\n                )\r\n              ) : (\r\n                <>\r\n                  <div className=\"container-item attention\">\r\n                    <center>\r\n                      <h3>You're not registered. Please register first.</h3>\r\n                      <br />\r\n                      <Link\r\n                        to=\"/Registration\"\r\n                        style={{ color: \"black\", textDecoration: \"underline\", fontSize: '20px' }}\r\n                      >\r\n                        Registration Page\r\n                      </Link>\r\n                    </center>\r\n                  </div>\r\n                </>\r\n              )}\r\n              <div className=\"container-main\">\r\n                <h2>Candidates</h2>\r\n                <small>Total candidates: {this.state.candidates.length}</small>\r\n                {this.state.candidates.length < 1 ? (\r\n                  <div className=\"container-item attention\">\r\n                    <center>Not one to vote for.</center>\r\n                  </div>\r\n                ) : (\r\n                  <>\r\n                    {this.state.candidates.map(this.renderCandidates)}\r\n                    <div\r\n                      className=\"container-item\"\r\n                      style={{ border: \"1px solid black\" }}\r\n                    >\r\n                      <center>That is all.</center>\r\n                    </div>\r\n                  </>\r\n                )}\r\n              </div>\r\n            </>\r\n          ) : !this.state.isElStarted && this.state.isElEnded ? (\r\n            <>\r\n              <div className=\"container-item attention\">\r\n                <center>The Election ended.</center>\r\n                <center>\r\n                  <br />\r\n                  <Link\r\n                    to=\"/Result\"\r\n                    style={{ color: \"black\", textDecoration: \"underline\" }}\r\n                  >\r\n                    See results\r\n                  </Link>\r\n                </center>\r\n              </div>\r\n            </>\r\n          ) : null}\r\n          <table>\r\n            <tr>\r\n              <th>Candidate ID</th>\r\n              <th>Voter Address</th>\r\n            </tr>\r\n            {this.state.eventVoters.map(this.LoopEvent)}\r\n          </table>\r\n          \r\n          \r\n        </div>\r\n      </>\r\n    );\r\n  }\r\n}","// Node modules\r\nimport React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\n// Components\r\nimport NavbarUser from '../Navbar/NavbarUser'\r\nimport NavbarAdmin from '../Navbar/NavbarAdmin'\r\n\r\nimport NotInit from \"../NotInit\";\r\n\r\n// Contract\r\nimport getWeb3 from \"../../getWeb3\";\r\nimport Electionabi from '../../contracts/Election.json'\r\n// CSS\r\nimport \"./Result.css\";\r\n\r\nexport default class Result extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      ElectionInstance: undefined,\r\n      account: null,\r\n      web3: null,\r\n      isAdmin: false,\r\n      candidateCount: undefined,\r\n      candidates: [],\r\n      isElStarted: false,\r\n      isElEnded: false,\r\n      adminCount: 0,\r\n      admins: [],\r\n      isSubAdmin: false,\r\n      adminAddress: \"\",\r\n    };\r\n  }\r\n  componentDidMount = async () => {\r\n    if (!window.location.hash) {\r\n      window.location = window.location + \"#loaded\";\r\n      window.location.reload();\r\n    }\r\n    try {\r\n      const web3 = await getWeb3();\r\n      const accounts = await web3.eth.getAccounts();\r\n      const networkId = await web3.eth.net.getId();\r\n      const deployedNetwork = Electionabi.networks[networkId];\r\n      const instance = new web3.eth.Contract(Electionabi.abi, deployedNetwork.address)\r\n\r\n      this.setState({ web3, ElectionInstance: instance, account: accounts[0] });\r\n\r\n      const candidateCount = await this.state.ElectionInstance.methods.getTotalCandidate().call();\r\n      this.setState({ candidateCount: candidateCount });\r\n\r\n      const start = await this.state.ElectionInstance.methods.getStart().call();\r\n      this.setState({ isElStarted: start });\r\n      const end = await this.state.ElectionInstance.methods.getEnd().call();\r\n      this.setState({ isElEnded: end });\r\n\r\n      // Loadin Candidates detials\r\n      for (let i = 1; i <= this.state.candidateCount; i++) {\r\n        const candidate = await this.state.ElectionInstance.methods.candidates(i).call();\r\n        this.state.candidates.push({\r\n          id: candidate.candidateId,\r\n          name: candidate.name,\r\n          voteCount: candidate.voteCount,\r\n        });\r\n      }\r\n\r\n      this.setState({ candidates: this.state.candidates });\r\n\r\n      // Admin account and verification\r\n      const admin = await this.state.ElectionInstance.methods.getAdmin().call();\r\n      if (this.state.account === admin) {\r\n        this.setState({ isAdmin: true });\r\n      }\r\n\r\n      const adminCount = await instance.methods.getTotalAdmin().call()\r\n      this.setState({adminCount: adminCount})\r\n      for(let i = 1; i <= this.state.adminCount; i++) {\r\n        const admin = await instance.methods.admins(i).call()\r\n        this.state.admins.push({\r\n          adminAddress: admin.adminAddress,\r\n          name: admin.name,\r\n          status: admin.staus \r\n        })\r\n      }\r\n      this.setState({admins: this.state.admins})\r\n      \r\n      for(let i = 0; i < adminCount; i++) \r\n        if(this.state.account === this.state.admins[i].adminAddress) this.setState({isSubAdmin: true})\r\n\r\n    } catch (error) {\r\n      alert(`Failed to load web3, accounts, or contract. Check console for details.`);\r\n      console.error(error);\r\n    }\r\n  };\r\n\r\n  render() {\r\n    if (!this.state.web3) {\r\n      return (\r\n        <>\r\n          {this.state.isAdmin || this.state.isSubAdmin ? <NavbarAdmin /> : <NavbarUser />}\r\n          <center>Loading Web3, accounts, and contract...</center>\r\n        </>\r\n      );\r\n    }\r\n\r\n    return (\r\n      \r\n      <>\r\n        {this.state.isAdmin || this.state.isSubAdmin ? <NavbarAdmin /> : <NavbarUser />}\r\n        <br />\r\n        <div>\r\n          {!this.state.isElStarted && !this.state.isElEnded ? (\r\n            <NotInit />\r\n          ) : this.state.isElStarted && !this.state.isElEnded ? (\r\n            <div className=\"container-item attention\">\r\n              <center>\r\n                <p>Result will be displayed once the election has ended.</p>\r\n                <p>Go ahead and cast your vote {\"(if not already)\"}.</p>\r\n                <br />\r\n                <Link\r\n                  to=\"/Voting\"\r\n                  style={{ color: \"black\", textDecoration: \"underline\" }}\r\n                >\r\n                  Voting Page\r\n                </Link>\r\n              </center>\r\n            </div>\r\n          ) : !this.state.isElStarted && this.state.isElEnded ? (\r\n            displayResults(this.state.candidates)\r\n          ) : null}\r\n        </div>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nfunction displayWinner(candidates) {\r\n  const getWinner = (candidates) => {\r\n    // Returns an object having maxium vote count\r\n    let maxVoteRecived = 0;\r\n    let winnerCandidate = [];\r\n    for (let i = 0; i < candidates.length; i++) {\r\n      if (candidates[i].voteCount > maxVoteRecived) {\r\n        maxVoteRecived = candidates[i].voteCount;\r\n        winnerCandidate = [candidates[i]];\r\n      } else if (candidates[i].voteCount === maxVoteRecived) {\r\n        winnerCandidate.push(candidates[i]);\r\n      }\r\n    }\r\n    return winnerCandidate;\r\n  };\r\n  const renderWinner = (winner) => {\r\n    return (\r\n      <div className=\"container-winner\">\r\n        <div className=\"winner-info\">\r\n          <p className=\"winner-tag\">Winner!</p>\r\n          <h2> {winner.name}</h2>\r\n        </div>\r\n        <div className=\"winner-votes\">\r\n          <div className=\"votes-tag\">Total Votes: </div>\r\n          <div className=\"vote-count\">{winner.voteCount}</div>\r\n        </div>\r\n      </div>\r\n    );\r\n  };\r\n  const winnerCandidate = getWinner(candidates);\r\n  return <>{winnerCandidate.map(renderWinner)}</>;\r\n}\r\n\r\nexport function displayResults(candidates) {\r\n  const renderResults = (candidate) => {\r\n    return (\r\n      <tr>\r\n        <td>{candidate.id}</td>\r\n        <td>{candidate.name}</td>\r\n        <td>{candidate.voteCount}</td>\r\n      </tr>\r\n    );\r\n  };\r\n  return (\r\n    <>\r\n      {candidates.length > 0 ? (\r\n        <div className=\"container-main\">{displayWinner(candidates)}</div>\r\n      ) : null}\r\n      <div className=\"container-main\" style={{ borderTop: \"1px solid\" }}>\r\n        <h2 className=\"text-center\">Results</h2>\r\n        <p className=\"text-center\">Total candidates: {candidates.length}</p>\r\n        {candidates.length < 1 ? (\r\n          <div className=\"container-item attention\">\r\n            <center>No candidates.</center>\r\n          </div>\r\n        ) : (\r\n          <>\r\n            <div className=\"container-item\">\r\n              <table>\r\n                <tr>\r\n                  <th>Id</th>\r\n                  <th>Candidate</th>\r\n                  <th>Votes</th>\r\n                </tr>\r\n                {candidates.map(renderResults)}\r\n              </table>\r\n            </div>\r\n          </>\r\n        )}\r\n      </div>\r\n    </>\r\n  );\r\n}","import React from 'react'\r\n\r\n\r\nconst LoadCandidates = ({admins}) => {\r\n  return (\r\n    <ul className=\"list-group list-group-flush\">\r\n      { admins ? ( admins.map((admin, key) => {\r\n        return(\r\n          <li className=\"list-group-item\" key={key}>\r\n            <label>\r\n              <strong>{admin.name}</strong>\r\n            </label>\r\n          </li>\r\n        )\r\n      })) : null}\r\n    </ul>\r\n  )\r\n}\r\nexport default LoadCandidates","import React, { useState, useEffect } from 'react'\r\nimport getWeb3 from '../../../getWeb3'\r\nimport NavbarUser from '../../Navbar/NavbarUser'\r\nimport NavbarAdmin from '../../Navbar/NavbarAdmin'\r\nimport AdminOnly from '../AdminOnly'\r\nimport Electionabi from '../../../contracts/Election.json'\r\nimport LoadAdmins from './LoadAdmins'\r\n\r\nimport '../AddCandidate/AddCandidate.css'\r\n\r\nconst AddCandidate = () => {\r\n\r\n  const[currentAccount, setCurrentAccount] = useState(\"\")\r\n  const[ElectionSC, setElectionSC] = useState()\r\n  const[isAdmin, setIsAdmin] = useState(false)\r\n  const[web3, setWeb3] = useState(null)\r\n  const[adminName, setAdminName] = useState(\"\")\r\n  const[adminCount, setAdminCount] = useState()\r\n  const[admins, setAdmins] = useState([])\r\n  const[adminAddress, setAdminAddress] = useState(\"\")\r\n  useEffect(() => {\r\n    if (!window.location.hash) {\r\n      window.location = window.location + \"#loaded\";\r\n      window.location.reload();\r\n    }\r\n    loadContracts()\r\n\r\n  }, )\r\n  const loadContracts = async () => {\r\n    const web3 = await getWeb3()\r\n    setWeb3(web3)\r\n    const account = await web3.eth.getAccounts()\r\n    const networkId = await web3.eth.net.getId()\r\n    const deployedNetwork = Electionabi.networks[networkId]\r\n    if(deployedNetwork) {\r\n      const election = new web3.eth.Contract(Electionabi.abi, deployedNetwork.address)\r\n      setElectionSC(election)\r\n      setCurrentAccount(account[0])\r\n      const masterAdmin = await election.methods.getAdmin().call()\r\n      \r\n      if(account[0] === masterAdmin) setIsAdmin(true)\r\n      const adminCount = await election.methods.getTotalAdmin().call()\r\n      setAdminCount(adminCount)\r\n\r\n      let admins = []\r\n      for(let i = 1; i <= adminCount; i++) {\r\n        const admin = await election.methods.admins(i).call()\r\n        if(account[0] === admin.adminAddress) setIsAdmin(true)\r\n        admins.push(admin)\r\n      }\r\n      setAdmins(admins)\r\n      \r\n      // for(let i = 1; i <= adminCount; i++)\r\n      //   if(account[0] === admins[i].adminAddress) setIsSubAdmin(true) \r\n    }\r\n  }\r\n\r\n  const updateAdminName = (e) => {\r\n    setAdminName(e.target.value)\r\n  }\r\n  const updateAdminAddress = (e) => {\r\n    setAdminAddress(e.target.value)\r\n  }\r\n\r\n  const addAdmin = async () => {\r\n    await ElectionSC\r\n    .methods\r\n    .addAdmin(adminAddress, adminName)\r\n    .send({from: currentAccount})\r\n    .on('transactionhash', () => {console.log(\"Added Successfully\")})\r\n    window.location.reload()\r\n  }\r\n  if(!web3) {\r\n    return (\r\n      <>\r\n      {isAdmin ? <NavbarAdmin /> : <NavbarUser />}\r\n        {/* { isAdmin || admins[currentAccount] ? <NavbarAdmin masterAdmin={true}/> :\r\n          !admins[currentAccount]? <NavbarAdmin masterAdmin={false} />\r\n          : <NavbarUser />\r\n        } */}\r\n        <center>Loading Web3, accounts, and contracts...</center>\r\n      </>\r\n    )\r\n  }\r\n  if(!isAdmin) {\r\n    \r\n    return(\r\n      <>\r\n        <NavbarUser />\r\n        <AdminOnly page=\"Add Admins Page\"/>\r\n      </>\r\n    )\r\n  }\r\n  return (\r\n    <div>\r\n      <NavbarAdmin />\r\n      <div className=\"container-main\">\r\n        <h2 className=\"text-center\">Add a new Admin</h2>\r\n        <center>Total Admins: {adminCount}</center>\r\n        <div className=\"container-item\">\r\n          <form className=\"form\">\r\n            <label className={\"label-ac\"}>\r\n              Name\r\n              <input\r\n                className={\"input-ac\"}\r\n                type=\"text\"\r\n                placeholder=\"Admin Name\"\r\n                value={adminName}\r\n                onChange={updateAdminName}\r\n              />\r\n            </label>\r\n            <label className={\"label-ac\"}>\r\n              Public Address\r\n              <input\r\n                className={\"input-ac\"}\r\n                type=\"text\"\r\n                placeholder=\"Public Address\"\r\n                value={adminAddress}\r\n                onChange={updateAdminAddress}\r\n              />\r\n            </label>\r\n            <button\r\n              onClick={addAdmin} className=\"btn-add\"\r\n              disabled={adminName.length < 3 || adminName.length > 21}>\r\n              Add\r\n            </button>\r\n          </form>\r\n        </div>\r\n      </div>\r\n      <LoadAdmins admins={admins}/>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default AddCandidate","import React, { Component } from 'react'\r\n\r\nimport NavbarUser from '../Navbar/NavbarUser'\r\nimport NavbarAdmin from '../Navbar/NavbarAdmin'\r\nimport NotInit from '../NotInit'\r\n\r\nimport getWeb3 from '../../getWeb3'\r\nimport Electionabi from '../../contracts/Election.json'\r\n\r\n\r\nimport './Registration.css'\r\n\r\n\r\nexport default class Registration extends Component {\r\n  constructor(props) {\r\n    super(props)\r\n    this.state = {\r\n      ElectionInstance: undefined,\r\n      web3: null,\r\n      account: null,\r\n      isAdmin: false,\r\n      isElStarted: false,\r\n      isElEnded: false,\r\n      voterCount: undefined,\r\n      voterName: '',\r\n      voterPhone: '',\r\n      voters: [],\r\n      currentVoter: {\r\n        address: undefined,\r\n        name: null,\r\n        phone: null,\r\n        voted: false,\r\n        isVerified: 0,\r\n        isRegistered: false\r\n      }\r\n    }\r\n  }\r\n\r\n  componentDidMount = async () => {\r\n    if (!window.location.hash) {\r\n      window.location = window.location + \"#loaded\";\r\n      window.location.reload();\r\n    }\r\n    try {\r\n      const web3 = await getWeb3()\r\n      const accounts = await web3.eth.getAccounts()\r\n      const networkId = await web3.eth.net.getId()\r\n      const deployedNetwork = Electionabi.networks[networkId]\r\n      const instance = new web3.eth.Contract(Electionabi.abi, deployedNetwork.address)\r\n\r\n      this.setState({\r\n        web3: web3,\r\n        ElectionInstance: instance,\r\n        account: accounts[0]\r\n      })\r\n\r\n      const admin = await this.state.ElectionInstance.methods.getAdmin().call()\r\n      if(this.state.account === admin) this.setState({isAdmin: true})\r\n\r\n      const start = await this.state.ElectionInstance.methods.getStart().call()\r\n      this.setState({isElStarted: start})\r\n      const end = await this.state.ElectionInstance.methods.getEnd().call()\r\n      this.setState({isElEnded: end})\r\n\r\n\r\n      const voterCount = await this.state.ElectionInstance.methods.getTotalVoters().call()\r\n      this.setState({voterCount: voterCount})\r\n\r\n      for(let i = 0; i < this.state.voterCount; i++) {\r\n        const voterAddress = await this.state.ElectionInstance.methods.voters(i).call()\r\n        const voter = await this.state.ElectionInstance.methods.voterDetails(voterAddress).call()\r\n        this.state.voters.push({\r\n          address: voter.voterAddress,\r\n          name: voter.name,\r\n          phone: voter.phone,\r\n          isVerified: voter.isVerified,\r\n          isRegistered: voter.isRegistered\r\n        })\r\n      }\r\n\r\n      this.setState({voters: this.state.voters})\r\n\r\n\r\n      const currentVoter = await this.state.ElectionInstance.methods.voterDetails(this.state.account).call()\r\n      const voted = await this.state.ElectionInstance.methods.voted(this.state.account).call()\r\n      this.setState({\r\n        currentVoter: {\r\n          address: currentVoter.voterAddress,\r\n          name: currentVoter.name,\r\n          phone: currentVoter.phone,\r\n          voted: voted,\r\n          isVerified: currentVoter.isVerfied,\r\n          isRegistered: currentVoter.isRegistered\r\n        }\r\n      })\r\n\r\n    } catch (error) {\r\n      console.error(error)\r\n      alert(\r\n        `Failed to load web3, accounts, or contract. Check console for details (f12).`\r\n      );\r\n    }\r\n  }\r\n\r\n\r\n  updateVoterName = (e) => {\r\n    this.setState({voterName: e.target.value})\r\n  }\r\n  updateVoterPhone = (e) => {\r\n    this.setState({voterPhone: e.target.value})\r\n  }\r\n\r\n  registerAsVoter = async () => {\r\n    \r\n    if(!this.state.currentVoter.isRegistered) {\r\n      await this.state.ElectionInstance.methods\r\n      .registerAsVoter(this.state.voterName, this.state.voterPhone)\r\n      .send({from: this.state.account})\r\n    } else {\r\n      await this.state.ElectionInstance.methods\r\n      .updateVoter(this.state.voterName, this.state.voterPhone)\r\n      .send({from: this.state.account})\r\n    }\r\n    \r\n    window.location.reload()\r\n  }\r\n  render() {\r\n    if(!this.state.web3) {\r\n      return(\r\n        <>\r\n          {this.state.isAdmin ? <NavbarAdmin />: <NavbarUser />}\r\n          <center>Loading Web3, accounts, and Contracts...</center>\r\n        </>\r\n      )\r\n    }\r\n    return (\r\n      <>\r\n        {this.state.isAdmin ? <NavbarAdmin />: <NavbarUser />}\r\n        {!this.state.isElStarted && !this.state.isElEnded ? \r\n        (\r\n          <NotInit />\r\n        ) : (\r\n          <div className=\"\">\r\n            <div className=\"container-item info\">\r\n              <p className=\"text-center\">Total registered voters: {this.state.voters.length}</p>\r\n            </div>\r\n            <div className=\"container-main \">\r\n              <h3>Registration</h3>\r\n              <small>Register to vote.</small>\r\n              <div className=\"container-item\">\r\n                <form>\r\n                  <div className=\"div-li\">\r\n                    <label className={\"label-r\"}>\r\n                      Account Address\r\n                      <input\r\n                        className={\"input-r\"}\r\n                        type=\"text\"\r\n                        value={this.state.account}\r\n                        style={{ width: \"400px\" }}\r\n                      />{\" \"}\r\n                    </label>\r\n                  </div>\r\n                  <div className=\"div-li\">\r\n                    <label className={\"label-r\"}>\r\n                      Name\r\n                      <input\r\n                        className={\"input-r\"}\r\n                        type=\"text\"\r\n                        placeholder=\"eg. Mostafa\"\r\n                        value={this.state.voterName}\r\n                        onChange={this.updateVoterName}\r\n                      />{\" \"}\r\n                    </label>\r\n                  </div>\r\n                  <div className=\"div-li\">\r\n                    <label className={\"label-r\"}>\r\n                      Phone number <span style={{ color: \"tomato\" }}>*</span>\r\n                      <input\r\n                        className={\"input-r\"}\r\n                        type=\"number\"\r\n                        placeholder=\"eg. 01091390188\"\r\n                        value={this.state.voterPhone}\r\n                        onChange={this.updateVoterPhone}\r\n                      />\r\n                    </label>\r\n                  </div>\r\n                  <p>\r\n                    <span style={{ color: \"red\" }}> Note: </span>\r\n                    <br /> Make sure your account address and Phone number are\r\n                    correct.\r\n                  </p>\r\n                  <button\r\n                    className=\"btn-add\"\r\n                    disabled={\r\n                      this.state.voterPhone.length !== 11 ||\r\n                      this.state.currentVoter.isVerified === 1\r\n                    }\r\n                    onClick={this.registerAsVoter}\r\n                  >\r\n                    {this.state.currentVoter.isRegistered\r\n                      ? \"Update\"\r\n                      : \"Register\"}\r\n                  </button>\r\n                </form>\r\n              </div>\r\n            </div>\r\n            <div\r\n              className=\"container-main\"\r\n              style={{\r\n                borderTop: this.state.currentVoter.isRegistered\r\n                  ? null\r\n                  : \"1px solid\",\r\n              }}\r\n            >\r\n              {loadCurrentVoter(\r\n                this.state.currentVoter,\r\n                this.state.currentVoter.isRegistered\r\n              )}\r\n            </div>\r\n            {this.state.isAdmin ? (\r\n              <div\r\n                className=\"container-main\"\r\n                style={{ borderTop: \"1px solid\" }}\r\n              >\r\n                <small>TotalVoters: {this.state.voters.length}</small>\r\n                {loadAllVoters(this.state.voters)}\r\n              </div>\r\n            ) : null}            \r\n          </div>\r\n        )}\r\n      </>\r\n    )\r\n  }\r\n} \r\n\r\nexport function loadCurrentVoter(voter, isRegistered) {\r\n  \r\n  return (\r\n    <>\r\n      <div\r\n        className={\"container-item \" + (isRegistered ? \"success\" : \"attention\")}\r\n      >\r\n        <center>Your Registered Info</center>\r\n      </div>\r\n      <div\r\n        className={\"container-list \" + (isRegistered ? \"success\" : \"attention\")}\r\n      >\r\n        <table>\r\n          <tr>\r\n            <th>Account Address</th>\r\n            <td>{voter.address}</td>\r\n          </tr>\r\n          <tr>\r\n            <th>Name</th>\r\n            <td>{voter.name}</td>\r\n          </tr>\r\n          <tr>\r\n            <th>Phone</th>\r\n            <td>{voter.phone}</td>\r\n          </tr>\r\n          <tr>\r\n            <th>Voted</th>\r\n            <td>{voter.voted ? \"True\" : \"False\"}</td>\r\n          </tr>\r\n          <tr>\r\n            <th>Verification</th>\r\n            <td>{voter.isVerified == 1 ? \"True\" : \"False\"}</td>\r\n          </tr>\r\n          <tr>\r\n            <th>Registered</th>\r\n            <td>{voter.isRegistered ? \"True\" : \"False\"}</td>\r\n          </tr>\r\n        </table>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\nexport function loadAllVoters(voters) {\r\n  \r\n  const renderAllVoters = (voter) => {\r\n    return (\r\n      <>\r\n        <div className=\"container-list success\">\r\n          <table>\r\n            <tr>\r\n              <th>Account address</th>\r\n              <td>{voter.address}</td>\r\n            </tr>\r\n            <tr>\r\n              <th>Name</th>\r\n              <td>{voter.name}</td>\r\n            </tr>\r\n            <tr>\r\n              <th>Phone</th>\r\n              <td>{voter.phone}</td>\r\n            </tr>\r\n            <tr>\r\n              <th>Voted</th>\r\n              <td>{voter.hasVoted ? \"True\" : \"False\"}</td>\r\n            </tr>\r\n            <tr>\r\n              <th>Verified</th>\r\n              <td>{voter.isVerified == 1 ? \"True\" : \"False\"}</td>\r\n            </tr>\r\n            <tr>\r\n              <th>Registered</th>\r\n              <td>{voter.isRegistered ? \"True\" : \"False\"}</td>\r\n            </tr>\r\n          </table>\r\n        </div>\r\n      </>\r\n    );\r\n  };\r\n  return (\r\n    <>\r\n      <div className=\"container-item success\">\r\n        <center>List of voters</center>\r\n      </div>\r\n      {voters.map(renderAllVoters)}\r\n    </>\r\n  );\r\n}","import React, { Component } from 'react'\r\n\r\nimport NavbarUser from '../../Navbar/NavbarUser'\r\nimport NavbarAdmin from '../../Navbar/NavbarAdmin'\r\nimport AdminOnly from '../AdminOnly'\r\n\r\nimport getWeb3 from '../../../getWeb3'\r\nimport Electionabi from '../../../contracts/Election.json'\r\n\r\nexport default class Verification extends Component {\r\n  constructor(props) {\r\n    super(props)\r\n    this.state = {\r\n      ElectionInstance: undefined,\r\n      account: \"\",\r\n      isAdmin: false,\r\n      voterCount: undefined,\r\n      voters: [],\r\n      web3: null\r\n    }\r\n  }\r\n\r\n  componentDidMount = async () => {\r\n    if (!window.location.hash) {\r\n      window.location = window.location + \"#loaded\";\r\n      window.location.reload();\r\n    }\r\n    try {\r\n      const web3 = await getWeb3()\r\n      const accounts = await web3.eth.getAccounts();\r\n      const networkId = await web3.eth.net.getId();\r\n      const deployedNetwork = Electionabi.networks[networkId];\r\n      const instance = new web3.eth.Contract(Electionabi.abi, deployedNetwork.address)\r\n\r\n      this.setState({ web3, ElectionInstance: instance, account: accounts[0] });\r\n\r\n      const admin = await this.state.ElectionInstance.methods.getAdmin().call()\r\n      if(this.state.account == admin) this.setState({isAdmin: true})\r\n\r\n      const voterCount = await this.state.ElectionInstance.methods.getTotalVoters().call()\r\n      this.setState({voterCount: voterCount})\r\n\r\n      for(let i = 0; i < this.state.voterCount; i++) {\r\n        const voterAddress = await this.state.ElectionInstance.methods.voters(i).call()\r\n        const voter = await this.state.ElectionInstance.methods.voterDetails(voterAddress).call()\r\n        const voted = await this.state.ElectionInstance.methods.voted(voterAddress).call()\r\n\r\n        this.state.voters.push({\r\n          address: voterAddress,\r\n          name: voter.name,\r\n          phone: voter.phone,\r\n          isVerified: voter.isVerfied,\r\n          isRegistered: voter.isRegistered,\r\n          voted: voted\r\n        })\r\n      }\r\n      this.setState({voters: this.state.voters})\r\n      \r\n      \r\n    } catch (error) {\r\n      console.error(error)\r\n      alert('Failed To Load The Contract...')\r\n    }\r\n  }\r\n\r\n  renderUnverifiedVoters = (voter) => {\r\n    const verifyVoter = async (address, verifiedStatus) => {\r\n      await this.state.ElectionInstance.methods\r\n      .verifyVoter(address, verifiedStatus)\r\n      .send({from: this.state.account})\r\n\r\n      window.location.reload()\r\n    }\r\n    return (\r\n      <>\r\n        <div>\r\n          {voter.isVerified == 1 ? (\r\n            <div className=\"d-flex bd-highlight\">\r\n              <p className=\"p-2 flex-fill bd-highlight\">Account: {voter.address}</p>\r\n              <p className=\"p-2 flex-fill bd-highlight text-success\">Approved</p>\r\n              <p className=\"p-2 flex-fill bd-highlight\">Vote Status: {voter.voted ? \"True\": \"False\"}</p>\r\n            </div>\r\n          ): voter.isVerified == 2 ? (\r\n            <div className=\"d-flex bd-highlight\">\r\n              <p className=\"p-2 flex-fill bd-highlight\">Account: {voter.address}</p>\r\n              <p className=\"p-2 flex-fill bd-highlight text-danger\">Rejected</p>\r\n              <p className=\"p-2 flex-fill bd-highlight\">Vote Status: {voter.voted ? \"True\": \"False\"}</p>\r\n            </div>\r\n          ): (\r\n            <div>\r\n              <table>\r\n                <tr>\r\n                  <th>Account Address</th>\r\n                  <th>Name</th>\r\n                  <th>Phone</th>\r\n                  <th>Approve</th>\r\n                  <th>Reject</th>\r\n                </tr>\r\n                <tr>\r\n                  <td>{voter.address}</td>\r\n                  <td>{voter.name}</td>\r\n                  <td>{voter.phone}</td>\r\n                  <td><button \r\n                    className=\"btn btn-success\"\r\n                    onClick={() => verifyVoter(voter.address, 1)}>Approve</button></td>\r\n                  <td><button \r\n                    className=\"btn btn-danger\"\r\n                    onClick={() => verifyVoter(voter.address, 2)}>Reject</button></td>\r\n                </tr>\r\n              </table>\r\n            </div>\r\n          )}\r\n        </div>\r\n      </>\r\n    )\r\n  }\r\n\r\n  render() {\r\n    if(!this.state.web3) {\r\n      return(\r\n        <>\r\n          {this.state.isAdmin ? <NavbarAdmin />: <NavbarUser />}\r\n          <center>Loading Web3, accounts, and Contracts...</center>\r\n        </>\r\n      )\r\n    }\r\n    if(!this.state.isAdmin) {\r\n      return(\r\n        <>\r\n          <NavbarUser />\r\n          <AdminOnly page=\"Verification Page.\" />\r\n        </>\r\n      )\r\n    }\r\n    return (\r\n      <>\r\n        <NavbarAdmin />\r\n        <div className=\"container-main\">\r\n          <h3 className=\"text-center\">Verification</h3>\r\n          <p className=\"text-center\">Total Voters: {this.state.voterCount}</p>\r\n          {this.state.voterCount == 0 ? (\r\n            <p className=\"text-center\">No One has Registered Yet.</p>\r\n          ): (\r\n            <>\r\n              <div>\r\n                <p className=\"text-center\">List Of Registered Voters:</p>\r\n              </div>\r\n              {this.state.voters.map(this.renderUnverifiedVoters)}\r\n            </>\r\n          )}\r\n        </div>\r\n      </>\r\n    )\r\n  }\r\n\r\n\r\n}","import React from 'react'\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst NotFound = () => {\r\n  return (\r\n    <>\r\n      <h1>404 NOT FOUND!</h1>\r\n      <center>\r\n        <p>\r\n          The page your are looking for doesn't exist.\r\n          <br />\r\n          Go to{\" \"}\r\n          <Link\r\n            to=\"/\"\r\n            style={{ color: \"black\", textDecoration: \"underline\" }}\r\n          >\r\n            Home\r\n          </Link>\r\n        </p>\r\n      </center>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default NotFound","import React  from 'react'\r\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\r\nimport Home from './Components/Home/Home';\r\nimport AddCandidate from './Components/Admin/AddCandidate/AddCandidate';\r\nimport Voting from './Components/Voting/Voting';\r\nimport Result from './Components/Result/Result';\r\nimport AddAdmin from './Components/Admin/AddAdmin/AddAdmin'\r\nimport Registration from './Components/Registration/Registration'\r\nimport Verification from './Components/Admin/Verification/Verification'\r\n\r\nimport NotFound from './Components/NotFound';\r\n\r\nfunction App() {\r\n  return (\r\n    <div className=\"App\">\r\n      <Router>\r\n        <Switch>\r\n          <Route exact path=\"/\" component={Home} />\r\n          <Route exact path=\"/AddCandidate\" component={AddCandidate} />\r\n          <Route exact path=\"/Voting\" component={Voting} />\r\n          <Route exact path=\"/Result\" component={Result} />\r\n          <Route exact path=\"/AddAdmin\" component={AddAdmin} />\r\n          <Route exact path=\"/Registration\" component={Registration} />\r\n          <Route exact path=\"/Verification\" component={Verification} />\r\n          <Route exact path=\"*\" component={NotFound} />\r\n        </Switch>\r\n      </Router>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { HashRouter } from 'react-router-dom';\r\nimport App from './App';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <HashRouter>\r\n      <App />\r\n    </HashRouter>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n"],"sourceRoot":""}